version: "3"

volumes:
  placeholder-data:
  varnish-data:
  varnish-conf:
  nginxfpm-conf:
  mysql-data:
  app-code:
  data:
  grafana_data:

services:
  proxy:
    platform: linux/arm64
    image: jwilder/nginx-proxy
    container_name: system_nginx-proxy_1
    restart: always
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./.artifakt/etc/nginx-proxy/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf:ro
      - ./.artifakt/apache/certs:/etc/nginx/certs

  proxy-companion:
    platform: linux/arm64
    container_name: proxy-companion
    image: registry.artifakt.io/nginx-proxy-companion:latest
    restart: always
    environment:
      - "NGINX_PROXY_CONTAINER=system_nginx-proxy_1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.artifakt/apache/certs:/etc/nginx/certs

  varnish:
    platform: linux/arm64
    image: registry.artifakt.io/varnish:6.6
    container_name: varnish
    volumes:
      - ./.artifakt/etc/varnish/default.vcl:/etc/varnish/default.vcl:ro
      - varnish-data:/var/lib/varnish
      - varnish-conf:/etc/varnish/conf.d
    ports:
      - "8888:80"
    environment:
      - VIRTUAL_HOST= localhost
      - SELF_SIGNED_HOST= localhost
    restart: always

  nginx:
    platform: linux/arm64
    image: registry.artifakt.io/nginx-fpm:1.21
    container_name: nginx
    volumes:
      # - ./:/var/www/html:rw
      - app-code:/var/www/code
      - data:/data:ro
      - ./.artifakt/etc/nginx/default.conf:/etc/nginx/nginx.conf:ro
      - nginxfpm-conf:/etc/nginx/conf.d
    env_file:
      - ./.env

  app:
    build: .
    container_name: app
    env_file:
      - ./.env
    volumes:
      # - ./:/var/www/html:rw
      - "./data:/data"
      - varnish-conf:/conf/varnish
      - nginxfpm-conf:/conf/nginxfpm
      - app-code:/var/www/code
    restart: always
    expose:
      - 9000

  mysql:
    platform: linux/arm64
    image: liupeng0518/mysql:5.7-arm64
    restart: always
    volumes:
      - ./.artifakt/etc/mysql/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf:ro
      - mysql-data:/var/lib/mysql:rw
      #- ./share:/tmp/share
    env_file:
      - .env
    ports:
      - "3306:3306"
    container_name: mysql

  redis:
    platform: linux/arm64
    image: redis:6.0-alpine
    container_name: redis
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./.artifakt/etc/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: "prometheus"
    volumes:
      - ./.artifakt/etc/prometheus/config.yml:/etc/prometheus/config.yml:ro
      - "./.artifakt/etc/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml"
    ports:
      - "9090:9090"
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    container_name: alertmanager
    restart: always
    volumes:
      - "./.artifakt/etc/alertmanager/:/etc/alertmanager/"
    command:
      - "--config.file=/etc/alertmanager/config.yml"
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - "9100:9100"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - "grafana_data:/var/lib/grafana"
      - ./.artifakt/etc/grafana:/etc/grafana/provisioning/datasources
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=bruno.pinchede@artifakt.io
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

networks:
  monitoring:
    name: monitorisme
