# configuration file /etc/nginx/nginx.conf:
user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    real_ip_header True-Client-IP;
    set_real_ip_from 0.0.0.0/0;

    map_hash_max_size 128;
    map_hash_bucket_size 128;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout  600;
    proxy_read_timeout  600;
    proxy_send_timeout  600;

    gzip  on;
    gzip_static  on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_types application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml;
    gzip_vary on;
    gzip_disable "MSIE [1-6].(?!.*SV1)";

    server_names_hash_bucket_size 128;

    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;

    include /etc/nginx/conf.d/custom_http.conf;

    # configuration file /etc/nginx/conf.d/default.conf:
    upstream fastcgi_backend {
        server  app:9000;
        include /etc/nginx/conf.d/custom_upstream.conf;
    }

    server {
        listen 8080;
        location /metrics{ 
            stub_status;
            allow all;
        }
    }

    server {
        # IPv4.
        listen 80;
        #add_header _TOKEN_ disabled;
        server_name localhost;
  
        # [EDIT] Path to your domain Nginx logs.
        access_log /var/log/nginx/presta.com-access.log;
        error_log /var/log/nginx/presta.com-error.log;

        # [EDIT] Path to your PrestaShop directory.
        root /var/www/code;

        index index.php;

        # Redirect 404 errors to PrestaShop.
        error_page 404 /index.php?controller=404;

        # Images.
        rewrite ^/(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$1$2.jpg last;
        rewrite ^/(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$1$2$3.jpg last;
        rewrite ^/(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$1$2$3$4.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg last;
        rewrite ^/c/([\w.-]+)/.+\.jpg$ /img/c/$1.jpg last;



        # AlphaImageLoader for IE and FancyBox.
        rewrite ^images_ie/?([^/]+)\.(gif|jpe?g|png)$ js/jquery/plugins/fancybox/images/$1.$2 last;

        # Web service API.
        rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;

        # Installation sandbox.
        rewrite ^(/install(?:-dev)?/sandbox)/.* /$1/test.php last;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # [EDIT] Replace 'admin-dev' in this block with the name of your admin directory.
        location /ADMIN_TO_CHANGE/ {
            if (!-e $request_filename) {
                rewrite ^ /ADMIN_TO_CHANGE/index.php last;
            }
        }


        # .htaccess, .DS_Store, .htpasswd, etc.
        location ~ /\. {
            deny all;
        }

        # Source code directories.
        location ~ ^/(app|bin|cache|classes|config|controllers|docs|localization|override|src|tests|tools|translations|var|vendor)/ {
            deny all;
        }

        # vendor in modules directory.
        location ~ ^/modules/.*/vendor/ {
            deny all;
        }

        # Prevent exposing other sensitive files.
        location ~ \.(log|tpl|twig|sass|yml)$ {
            deny all;
        }

        # Prevent injection of PHP files.
        location /img {
            location ~ \.php$ { 
                deny all; 
            }
        }

        location /upload {
            location ~ \.php$ { 
                deny all;
            }
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~ [^/]\.php(/|$) {

            # Split $uri to $fastcgi_script_name and $fastcgi_path_info.
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;

            # Ensure that the requested PHP script exists before passing it
            # to the PHP-FPM.
            try_files $fastcgi_script_name =404;

            # Environment variables for PHP.
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;

            fastcgi_index index.php;

            fastcgi_keep_conn on;
            fastcgi_read_timeout 30s;
            fastcgi_send_timeout 30s;

            fastcgi_pass app:9000;
        }
    }
}